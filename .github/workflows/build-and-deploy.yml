name: Build and deploy
env:
  OUTPUT_FOLDER: dist
  DOTNET_VERSION: "7.x"

on: [workflow_dispatch]

jobs:
  build_staticsite:
    name: Build Static Site
    runs-on: ubuntu-latest
    environment: build
    defaults:
      run:
        working-directory: xmaze-static
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: bahmutov/npm-install@v1.4.5
        with:
          working-directory: xmaze-static

      - name: Build
        run: npm run build

      - name: Publish website output
        uses: actions/upload-artifact@v3
        with:
          name: website
          path: ${{ env.OUTPUT_FOLDER }}

  

  provision:
    name: Provision Azure infra
    # needs: [build_staticsite]
    runs-on: ubuntu-latest
    environment: production

    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: xmaze-infra

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure resource group exists
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create -g ${{ secrets.RESOURCE_GROUP }} -l ${{ secrets.RESOURCE_GROUP_LOCATION }}

      - name: Deploy Bicep
        uses: azure/arm-deploy@v1
        id: provisioned
        with:
          resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: ./xmaze-infra/main.bicep
          parameters: swaName=${{ secrets.SWA_NAME }} location=${{ secrets.RESOURCE_GROUP_LOCATION }}
          failOnStdErr: false
          
  deploy:
    name: Deploy
    needs: [build_staticsite, provision]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get SWA deployment token
        uses: azure/CLI@v1
        with:
            inlineScript: |
                SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list -n ${{ secrets.SWA_NAME }} -o tsv --query properties.apiKey)
                echo "::add-mask::$SWA_DEPLOYMENT_TOKEN"
                echo SWA_DEPLOYMENT_TOKEN=$SWA_DEPLOYMENT_TOKEN >> $GITHUB_ENV

      - name: Build And Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: $(swa_deployment_token)
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "dist"
          output_location: ''
          skip_app_build: true
          skip_api_build: true

  
